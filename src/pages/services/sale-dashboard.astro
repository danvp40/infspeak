---
import Layout from '~/layouts/PageLayout.astro';
import Header from '~/components/widgets/Header.astro';

import { headerData } from '~/data';
import { getAsset } from '~/utils/permalinks';

const meta = {
  title: 'Startup Landing Page',
};

const data = {
  navigation: {
    center_label: 'SALE ANALYTICS',
    items: [
      { href: '#flash', label: 'flash', image: getAsset('/assets/services/sales/nav/flash.png') },
      { href: '#growth', label: 'growth', image: getAsset('/assets/services/sales/nav/growth.png') },
      { href: '#distribution', label: 'distribution', image: getAsset('/assets/services/sales/nav/distribution.png') },
      { href: '#trend', label: 'trend', image: getAsset('/assets/services/sales/nav/trend.png') },
      { href: '#insights', label: 'insights', image: getAsset('/assets/services/sales/nav/insights.png') },
      {
        href: '#optimal-points',
        label: 'optimal points',
        image: getAsset('/assets/services/sales/nav/optimal-points.png'),
      },
    ],
  },
  images: [...Array(14).keys()].map((i) => getAsset(`/assets/services/sales/${i + 3}.png`)),
};
---

<Layout {meta}>
  <Fragment slot="header">
    <Header {...headerData} position="left" />
  </Fragment>

  <div
    class="flex"
    x-data={`{navigation: ${JSON.stringify(data.navigation)}, current: null, atTop: true}`}
    x-init="current = location.hash; atTop = (window.pageYOffset < 50) ? true: false;"
  >
    <div class="relative w-[400px] overflow-hidden z-10 shrink-0">
      <div
        class="fixed px-5 w-[400px] transition-all"
        :class="{'top-20': !atTop, 'top-40': atTop}"
        @scroll.window="atTop = (window.pageYOffset < 50) ? true: false"
      >
        <div
          class="relative w-[464px] h-[464px] border border-zinc-300 border-l-transparent border-t-transparent rounded-full -rotate-45 -translate-x-1/3"
        >
          <div class="h-full w-full rotate-45 relative flex items-center justify-center">
            <template x-for="(item, idx) in navigation.items" :key="item.href">
              <div
                class="nav-item absolute bottom-1/2 left-1/2 w-1/2 origin-left translate-x-full translate-y-full"
                :style="{transform: `rotate(${(-90 + 15 + 30 * idx) }deg)`}"
              >
                <div class="h-full border-t border-zinc-400 uppercase text-xs relative">
                  <div class="absolute w-full text-slate-400 pr-10 pl-20 text-center" x-text="item.label"></div>
                </div>
                <div
                  class="absolute w-20 h-20 right-0 flex items-center justify-center p-1"
                  :style="{transform: `translate(50%, -50%) rotate(${-(-90 + 15 + 30 * idx)}deg)`}"
                >
                  <a
                    :href="item.href"
                    class="nav transition-transform"
                    :class="{'active': item.href === current}"
                    @click="current = item.href"
                  >
                    <img :src="item.image" :alt="item.label" />
                  </a>
                </div>
              </div>
            </template>

            <!-- center -->
            <div
              class="w-40 h-40 border rounded-full border-gray-800 flex items-center justify-center text-center uppercase font-bold text-xl bg-white z-10"
            >
              <span x-html="navigation.center_label"></span>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="mt-4 p-8 pl-0 mb-20">
      <div class="relative px-4">
        <!-- start::Timeline item -->
        {
          data.images.map((image, idx) => {
            return (
              <div class="flex items-center w-full relative">
                {idx == data.images.length - 1 ? null : (
                  <div class="absolute h-full border border-gray-400 top-32 left-[1px]" />
                )}
                <div class="w-9 z-9 -translate-x-1/2 self-start mt-32">
                  <div class="w-10 h-10 bg-gray-400 border-[12px] border-white rounded-full" />
                </div>
                <div class="flex-1 pb-6">
                  <div class="shadow-lg rounded-3xl border border-zinc-200 overflow-hidden">
                    <img src={image} />
                  </div>
                </div>
              </div>
            );
          })
        }
        <!-- end::Timeline item -->
      </div>
    </div>
  </div>
</Layout>

<style>
  .nav.active,
  .nav:hover {
    --tw-scale-x: 1.1;
    --tw-scale-y: 1.1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x))
      skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }
</style>
