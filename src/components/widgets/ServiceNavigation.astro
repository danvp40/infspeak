---
interface MenuItem {
  href: string;
  label: string;
  image: string;
}

interface Navigation {
  center_label: string;
  items: Array<MenuItem>;
}

export interface Props {
  data: Navigation;
}

const { data } = Astro.props;
---

<Fragment>
  <div
    class="lg:hidden overflow-x-auto tab-container bg-white shadow-lg"
    x-data=`{currentTab: '${data.items[0].href}'}`
  >
    <div class="inline-flex md:grid grid-cols-6 gap-4 px-4">
      {
        data.items.map((item, idx) => {
          return (
            <a
              class="w-32 flex flex-col items-center py-4 border-primary"
              href={item.href}
              x-data={`{tabName: '${item.href}'}`}
              @click="currentTab = tabName"
              x-bind:class="{'border-b-2': currentTab == tabName }"
            >
              <div class="circle  border border-t-transparent border-primary rounded-full rotate-45">
                <div class="content relative -rotate-45 w-12 h-12 p-1">
                  <img src={item.image} alt={item.label} />
                  {idx < data.items.length - 1 ? (
                    <div class="arrow w-2 absolute bottom-1/2 right-0 translate-x-full border-b border-primary" />
                  ) : null}
                </div>
              </div>
              <div class="uppercase text-sm text-gray-500 pt-4 text-center">{item.label}</div>
            </a>
          );
        })
      }
    </div>
  </div>

  <div
    class="hidden lg:block relative w-[400px] overflow-hidden z-10 shrink-0"
    x-data={`{navigation: ${JSON.stringify(data)}, current: null, atTop: true}`}
    x-init="current = location.hash; atTop = (window.pageYOffset < 50) ? true: false;"
  >
    <div
      class="fixed px-5 w-[400px] transition-all overflow-hidden"
      :class="{'top-12': !atTop, 'top-28': atTop}"
      @scroll.window="atTop = (window.pageYOffset < 50) ? true: false;
    navigation.items.map(({href: id}) =>{
      const el = document.querySelector(id);
      if(el ){
        const  box = el.getBoundingClientRect()
        if(box.top < window.innerHeight/2 && box.bottom > 0) {
          current = id;
        }
      }
    })
    "
    >
      <div class="relative" style={{ transform: 'translateY(-15%) scale(0.9)' }}>
        <div class="absolute right-0 w-[200px] h-[928px] overflow-hidden">
          <div
            class="absolute right-12 w-[928px] h-[928px] border border-zinc-300 border-l-transparent border-t-transparent rounded-full -rotate-45"
          >
          </div>
        </div>
        <div class="relative w-[928px] h-[928px] -translate-x-2/3">
          <div class="h-full w-full relative">
            <div class="h-full w-full absolute flex items-center justify-center">
              {
                data.items.map((item, idx) => {
                  const r = 464;
                  const b = r / 2;
                  const alpha = ((-35 + 14 * idx) * Math.PI) / 180;
                  const sign = alpha / Math.abs(alpha);
                  const width = Math.sqrt(b * b + r * r - 2 * b * r * Math.cos(Math.abs(alpha)));
                  const delta = Math.sqrt(2 * r * r - 2 * r * r * Math.cos(Math.abs(alpha)));
                  const rotate =
                    Math.round((Math.acos((width * width + b * b - delta * delta) / (2 * width * b)) * 180) / Math.PI) *
                    sign;
                  return (
                    <div
                      class="nav-item absolute bottom-1/2 left-3/4 origin-left translate-x-full translate-y-full"
                      style={{ transform: `rotate(${rotate}deg)`, width: `${width}px` }}
                    >
                      <div class="h-full border-t border-zinc-400 uppercase text-[11px] relative">
                        <div class="absolute w-full text-slate-400 pr-10 pl-20 text-center">{item.label}</div>
                      </div>
                      <div
                        class="absolute w-20 h-20 right-0 flex items-center justify-center p-1"
                        style={{ transform: `translate(50%, -50%) rotate(${-rotate}deg)` }}
                      >
                        <a
                          x-data={`{href: '${item.href}'}`}
                          href={item.href}
                          class="nav transition-transform"
                          x-bind:class="{'active': href === current}"
                          @click="current = href"
                        >
                          <img src={item.image} alt={item.label} />
                        </a>
                      </div>
                    </div>
                  );
                })
              }

              <!-- center -->
              <div
                class="w-36 h-36 absolute top-1/2 left-3/4 -translate-x-1/2 -translate-y-1/2 border rounded-full border-gray-800 flex items-center justify-center text-center uppercase font-bold text-xl bg-white z-10"
              >
                <span>{data.center_label}</span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</Fragment>
<style>
  .nav.active,
  .nav:hover {
    --tw-scale-x: 1.1;
    --tw-scale-y: 1.1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x))
      skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .tab-container::-webkit-scrollbar {
    display: none;
  }

  .tab-container {
    scrollbar-width: none;
  }

  .arrow {
    @apply absolute;
  }
  .arrow:after {
    @apply border-primary absolute;
    content: '';

    border-width: 5px;
    border-right-width: 0;
    border-top: solid 4px transparent;
    border-bottom: solid 4px transparent;
    right: -5px;
    top: -3px;
  }
</style>
