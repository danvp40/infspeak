---
interface MenuItem {
  href: string;
  label: string;
  image: string;
}

interface Navigation {
  center_label: string;
  items: Array<MenuItem>;
}

export interface Props {
  data: Navigation;
}

const { data } = Astro.props;
---

<div
  class="relative w-[400px] overflow-hidden z-10 shrink-0"
  x-data={`{current: null, atTop: true}`}
  x-init="current = location.hash; atTop = (window.pageYOffset < 50) ? true: false;"
>
  <div
    class="fixed px-5 w-[400px] transition-all"
    :class="{'top-20': !atTop, 'top-40': atTop}"
    @scroll.window="atTop = (window.pageYOffset < 50) ? true: false;
    navigation.items.map(({href: id}) =>{
      const el = document.querySelector(id);
      if(el ){
        const  box = el.getBoundingClientRect()
        if(box.top < window.innerHeight/2 && box.bottom > 0) {
          current = id;
        }
      }
    })
    "
  >
    <div class="relative w-[348px] h-[696px] overflow-hidden">
      <div class="w-[250px] h-full absolute top-0 right-8 overflow-hidden">
        <div
          class="w-[696px] h-full absolute right-0 top-0 border border-zinc-300 border-l-transparent border-t-transparent rounded-full -rotate-45"
        >
        </div>
      </div>
      <div class="w-[696px] h-full absolute right-8 top-0 flex items-center justify-center">
        {
          data.items.map((item, idx) => {
            const width = Math.round(232 + Math.pow(Math.abs(-2.5 + idx), 2) * 10);
            return (
              <div
                class="nav-item absolute bottom-1/2 left-2/3 origin-left translate-x-full translate-y-full"
                style={{ transform: `rotate(${-90 + 15 + 30 * idx}deg)`, width: width + 'px' }}
              >
                <div class="h-full border-t border-zinc-400 uppercase text-[11px] relative">
                  <div class="absolute w-full text-slate-400 pr-10 pl-20 text-center">{item.label}</div>
                </div>
                <div
                  class="absolute w-20 h-20 right-0 flex items-center justify-center p-1"
                  style={{ transform: `translate(50%, -50%) rotate(${-(-90 + 15 + 30 * idx)}deg)` }}
                >
                  <a
                    href={item.href}
                    class="nav transition-transform"
                    x-bind:class={`{active: '${item.href}' === current}`}
                    @click={`current = '${item.href}'`}
                  >
                    <img src={item.image} alt={item.label} />
                  </a>
                </div>
              </div>
            );
          })
        }

        <!-- center -->
        <div
          class="w-40 h-40 absolute left-2/3 top-1/2 -translate-x-1/2 -translate-y-1/2 border rounded-full border-gray-800 flex items-center justify-center text-center uppercase font-bold text-xl bg-white z-10"
        >
          {data.center_label}
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  .nav.active,
  .nav:hover {
    --tw-scale-x: 1.1;
    --tw-scale-y: 1.1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x))
      skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }
</style>
